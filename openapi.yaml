openapi: 3.0.3
info:
  title: Book API
  description: This is a simple API for managing books and shelves, designed for entry-level library management. Each book in the system is associated with a specific shelf, indicating a one-to-many relationship between shelves and books. This API provides CRUD operations to manage both books and their associated shelves.
  version: 4.0.0
  contact:
    name: Yaren CAN
    url: https://www.linkedin.com/in/yarencan/
    email: yarencan.cse@gmail.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:8080/api
paths:
  /books/:
    get:
      tags:
        - Books
      summary: List all books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '404':
          description: No books found.
        '500':
          description: An error occurred while retrieving the books.
    post:
      tags:
        - Books
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book created
        '400':
          description: Data provided is incomplete or invalid.
        '500':
          description: An error occurred during the book creation.
  /books/{id}:
    get:
      tags:
        - Books
      summary: Get a book by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A detailed view of a book object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book with specified ID not found.
        '500':
          description: An error occurred while retrieving the book.
    put:
      tags:
        - Books
      summary: Update a book by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Updated book
        '404':
          description: Book with specified ID not found.
        '500':
          description: An error occurred during the update.
    delete:
      tags:
        - Books
      summary: Delete a book by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Book deleted
        '404':
          description: Book with specified ID not found.
        '500':
          description: An error occurred during the deletion.
  /shelves/:
    get:
      tags:
        - Shelves
      summary: List all shelves
      responses:
        '200':
          description: A list of shelves
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shelf'
        '404':
          description: No shelves found.
        '500':
          description: An error occurred while retrieving the shelves.
    post:
      tags:
        - Shelves
      summary: Create a new shelf
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shelf'
      responses:
        '201':
          description: Shelf created
        '400':
          description: Data provided is incomplete or invalid.
        '500':
          description: An error occurred during the shelf creation.
  /shelves/{id}:
    get:
      tags:
        - Shelves
      summary: Get a shelf by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A shelf object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shelf'
        '404':
          description: Shelf with specified ID not found.
        '500':
          description: An error occurred while retrieving the shelf.

    put:
      tags:
        - Shelves
      summary: Update a shelf by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shelf'
      responses:
        '200':
          description: Updated shelf
        '400':
          description: Data provided is incomplete or invalid.
        '404':
          description: Shelf with specified ID not found.
        '500':
          description: An error occurred during the update.
    delete:
      tags:
        - Shelves
      summary: Delete a shelf by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Shelf deleted
        '404':
          description: Shelf with specified ID not found.
        '500':
          description: An error occurred during the deletion.
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "Nutuk"
        author:
          type: string
          example: "Mustafa Kemal Atat√ºrk"
        isbn:
          type: string
          example: "9789753121163"
        shelf:
          $ref: '#/components/schemas/Shelf'
    Shelf:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Tarih"
